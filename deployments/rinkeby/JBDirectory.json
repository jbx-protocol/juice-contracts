{
  "address": "0x47F214f5e7D8589FEFe2946716aeA5fDfa53932a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IJBOperatorStore",
          "name": "_operatorStore",
          "type": "address"
        },
        {
          "internalType": "contract IJBProjects",
          "name": "_projects",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ADD_TERMINAL_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CONTROLLER_ALREADY_IN_ALLOWLIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CONTROLLER_NOT_IN_ALLOWLIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INVALID_PROJECT_ID",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PRIMARY_TERMINAL_ALREADY_SET",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SET_CONTROLLER_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SET_PRIMARY_TERMINAL_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UNAUTHORIZED",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IJBTerminal",
          "name": "terminal",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "AddTerminal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "AddToSetControllerAllowlist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "RemoveFromSetControllerAllowlist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IJBTerminal",
          "name": "terminal",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "RemoveTerminal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IJBController",
          "name": "controller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SetController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IJBTerminal",
          "name": "terminal",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SetPrimaryTerminal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "contract IJBTerminal[]",
          "name": "_terminals",
          "type": "address[]"
        }
      ],
      "name": "addTerminalsOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addToSetControllerAllowlist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "controllerOf",
      "outputs": [
        {
          "internalType": "contract IJBController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAllowedToSetController",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "isTerminalDelegateOf",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "contract IJBTerminal",
          "name": "_terminal",
          "type": "address"
        }
      ],
      "name": "isTerminalOf",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorStore",
      "outputs": [
        {
          "internalType": "contract IJBOperatorStore",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "primaryTerminalOf",
      "outputs": [
        {
          "internalType": "contract IJBTerminal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projects",
      "outputs": [
        {
          "internalType": "contract IJBProjects",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeFromSetControllerAllowlist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "contract IJBTerminal",
          "name": "_terminal",
          "type": "address"
        }
      ],
      "name": "removeTerminalOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "contract IJBController",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setControllerOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "contract IJBTerminal",
          "name": "_terminal",
          "type": "address"
        }
      ],
      "name": "setPrimaryTerminalOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "terminalsOf",
      "outputs": [
        {
          "internalType": "contract IJBTerminal[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8a368d0478568152d058ce066bcac9eda3da4f4b4f2f634e851b8c302aab436b",
  "receipt": {
    "to": null,
    "from": "0xE9bE6df23C7f9CaBa3005DA2fa2d8714d340D0aF",
    "contractAddress": "0x47F214f5e7D8589FEFe2946716aeA5fDfa53932a",
    "transactionIndex": 0,
    "gasUsed": "2002817",
    "logsBloom": "0x
    "blockHash": "0x792a83954203733276c9b7c55a9fc0c58d5a83e82b380bf1003ca3863763921e",
    "transactionHash": "0x8a368d0478568152d058ce066bcac9eda3da4f4b4f2f634e851b8c302aab436b",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 10032746,
        "transactionHash": "0x8a368d0478568152d058ce066bcac9eda3da4f4b4f2f634e851b8c302aab436b",
        "address": "0x47F214f5e7D8589FEFe2946716aeA5fDfa53932a",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e9be6df23c7f9caba3005da2fa2d8714d340d0af"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x792a83954203733276c9b7c55a9fc0c58d5a83e82b380bf1003ca3863763921e"
      }
    ],
    "blockNumber": 10032746,
    "cumulativeGasUsed": "2002817",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xacD28185AE65adc711481c0aECB0B99Ac8608698",
    "0xA08dD15247f67742eF1597Bcb2a0D829a7A3C5e1"
  ],
  "solcInputHash": "6296389d5d0c73c3ff767c6895895650",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IJBOperatorStore\",\"name\":\"_operatorStore\",\"type\":\"address\"},{\"internalType\":\"contract IJBProjects\",\"name\":\"_projects\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ADD_TERMINAL_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CONTROLLER_ALREADY_IN_ALLOWLIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CONTROLLER_NOT_IN_ALLOWLIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_PROJECT_ID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PRIMARY_TERMINAL_ALREADY_SET\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SET_CONTROLLER_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SET_PRIMARY_TERMINAL_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IJBTerminal\",\"name\":\"terminal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AddTerminal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AddToSetControllerAllowlist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"RemoveFromSetControllerAllowlist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IJBTerminal\",\"name\":\"terminal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"RemoveTerminal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IJBController\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SetController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IJBTerminal\",\"name\":\"terminal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SetPrimaryTerminal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"contract IJBTerminal[]\",\"name\":\"_terminals\",\"type\":\"address[]\"}],\"name\":\"addTerminalsOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addToSetControllerAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"controllerOf\",\"outputs\":[{\"internalType\":\"contract IJBController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAllowedToSetController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"isTerminalDelegateOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"contract IJBTerminal\",\"name\":\"_terminal\",\"type\":\"address\"}],\"name\":\"isTerminalOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorStore\",\"outputs\":[{\"internalType\":\"contract IJBOperatorStore\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"primaryTerminalOf\",\"outputs\":[{\"internalType\":\"contract IJBTerminal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"contract IJBProjects\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeFromSetControllerAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"contract IJBTerminal\",\"name\":\"_terminal\",\"type\":\"address\"}],\"name\":\"removeTerminalOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"contract IJBController\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"setControllerOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"contract IJBTerminal\",\"name\":\"_terminal\",\"type\":\"address\"}],\"name\":\"setPrimaryTerminalOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"terminalsOf\",\"outputs\":[{\"internalType\":\"contract IJBTerminal[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTerminalsOf(uint256,address[])\":{\"details\":\"Only a project owner, an operator, or its controller can add terminals.\",\"params\":{\"_projectId\":\"The ID of the project having a terminal added.\",\"_terminals\":\"The terminals to add.\"}},\"addToSetControllerAllowlist(address)\":{\"details\":\"If you would like an address/contract allowlisted, please reach out to the Juicebox dev team.\",\"params\":{\"_address\":\"the allowed address to be added.\"}},\"constructor\":{\"params\":{\"_operatorStore\":\"A contract storing operator assignments.\",\"_projects\":\"A contract which mints ERC-721's that represent project ownership and transfers.\"}},\"isAllowedToSetController(address)\":{\"params\":{\"_address\":\"the address to check\"},\"returns\":{\"_0\":\"A flag indicating whether or not the specified address can change controllers.\"}},\"isTerminalDelegateOf(uint256,address)\":{\"params\":{\"_contract\":\"The address of the terminal to check for.\",\"_projectId\":\"The ID of the project to check within.\"},\"returns\":{\"_0\":\"A flag indicating whether or not the specified terminal is a terminal of the specified project.\"}},\"isTerminalOf(uint256,address)\":{\"params\":{\"_projectId\":\"The ID of the project to check within.\",\"_terminal\":\"The address of the terminal to check for.\"},\"returns\":{\"_0\":\"A flag indicating whether or not the specified terminal is a terminal of the specified project.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"primaryTerminalOf(uint256,address)\":{\"details\":\"The zero address is returned if a terminal isn't found for the specified token.\",\"params\":{\"_projectId\":\"The ID of the project to get a terminal for.\",\"_token\":\"The token the terminal accepts.\"},\"returns\":{\"_0\":\"The primary terminal for the project for the specified token.\"}},\"removeFromSetControllerAllowlist(address)\":{\"params\":{\"_address\":\"The address to be removed.\"}},\"removeTerminalOf(uint256,address)\":{\"details\":\"Only a project owner or an operator can remove one of its terminals. \",\"params\":{\"_projectId\":\"The ID of the project having a terminal removed.\",\"_terminal\":\"The terminal to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setControllerOf(uint256,address)\":{\"details\":\" A controller can be set if: - the message sender is the project owner or an operator having the correct authorization. - or, an allowedlisted address is setting an allowlisted controller.\",\"params\":{\"_controller\":\"The new controller to set.\",\"_projectId\":\"The ID of the project to set a new controller for.\"}},\"setPrimaryTerminalOf(uint256,address)\":{\"details\":\"The terminal will be set as the primary for the token that its vault accepts. \",\"params\":{\"_projectId\":\"The ID of the project for which a primary token is being set.\",\"_terminal\":\"The terminal to make primary.\"}},\"terminalsOf(uint256)\":{\"params\":{\"_projectId\":\"The ID of the project to get terminals of.\"},\"returns\":{\"_0\":\"An array of terminal addresses.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addTerminalsOf(uint256,address[])\":{\"notice\":\" Add terminals to project's list of terminals.\"},\"addToSetControllerAllowlist(address)\":{\"notice\":\"The owner (Juicebox multisig) can add addresses which are allowed to change a project's controller. Those addresses are known and vetted controllers as well as contracts designed to launch new projects. This is not a requirement for all controllers. However, unknown controllers may require additional transactions to perform certain operations.\"},\"controllerOf(uint256)\":{\"notice\":\" For each project ID, the controller that manages how terminals interact with tokens and funding cycles. _projectId The ID of the project to get the controller of.\"},\"isAllowedToSetController(address)\":{\"notice\":\"Whether or not a specified address is allowed to set controllers.\"},\"isTerminalDelegateOf(uint256,address)\":{\"notice\":\"Whether or not a specified terminal is a terminal of the specified project.\"},\"isTerminalOf(uint256,address)\":{\"notice\":\"Whether or not a specified terminal is a terminal of the specified project.\"},\"operatorStore()\":{\"notice\":\" A contract storing operator assignments.\"},\"primaryTerminalOf(uint256,address)\":{\"notice\":\"The primary terminal that is managing funds for a project for a specified token.\"},\"projects()\":{\"notice\":\" The Projects contract which mints ERC-721's that represent project ownership and transfers.\"},\"removeFromSetControllerAllowlist(address)\":{\"notice\":\"See `addKnownController(...)` for context. Removes an address from the allowlist.\"},\"removeTerminalOf(uint256,address)\":{\"notice\":\" Remove a terminal from a project's list of terminals.\"},\"setControllerOf(uint256,address)\":{\"notice\":\"Update the controller that manages how terminals interact with the ecosystem.\"},\"setPrimaryTerminalOf(uint256,address)\":{\"notice\":\"Project's can set which terminal should be their primary for a particular token. This is useful in case a project has several terminals connected for a particular token.\"},\"terminalsOf(uint256)\":{\"notice\":\"For each project ID, the terminals that are currently managing its funds.\"}},\"notice\":\"Keeps a reference of which terminal contracts each project is currently accepting funds through, and which controller contract is managing each project's tokens and funding cycles.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/JBDirectory.sol\":\"JBDirectory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":4294967295},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/JBDirectory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\n\\nimport './abstract/JBOperatable.sol';\\nimport './interfaces/IJBTerminal.sol';\\nimport './interfaces/IJBDirectory.sol';\\nimport './libraries/JBOperations.sol';\\n\\n//*********************************************************************//\\n// --------------------------- custom errors ------------------------- //\\n//*********************************************************************//\\nerror ADD_TERMINAL_ZERO_ADDRESS();\\nerror CONTROLLER_ALREADY_IN_ALLOWLIST();\\nerror CONTROLLER_NOT_IN_ALLOWLIST();\\nerror INVALID_PROJECT_ID();\\nerror PRIMARY_TERMINAL_ALREADY_SET();\\nerror SET_CONTROLLER_ZERO_ADDRESS();\\nerror SET_PRIMARY_TERMINAL_ZERO_ADDRESS();\\n\\n/**\\n  @notice\\n  Keeps a reference of which terminal contracts each project is currently accepting funds through, and which controller contract is managing each project's tokens and funding cycles.\\n*/\\ncontract JBDirectory is IJBDirectory, JBOperatable, Ownable {\\n  //*********************************************************************//\\n  // --------------------- private stored properties ------------------- //\\n  //*********************************************************************//\\n\\n  /** \\n    @notice \\n    For each project ID, the terminals that are currently managing its funds.\\n\\n    _projectId The ID of the project to get terminals of.\\n  */\\n  mapping(uint256 => IJBTerminal[]) private _terminalsOf;\\n\\n  /** \\n    @notice \\n    The project's primary terminal for a token.\\n\\n    _projectId The ID of the project to get the primary terminal of.\\n    _token The token to get the project's primary terminal of.\\n  */\\n  mapping(uint256 => mapping(address => IJBTerminal)) private _primaryTerminalOf;\\n\\n  /**\\n    @notice\\n    Addresses that can set a project's controller. These addresses/contracts have been vetted and verified by Juicebox owners.\\n   */\\n  mapping(address => bool) private _setControllerAllowlist;\\n\\n  //*********************************************************************//\\n  // ---------------- public immutable stored properties --------------- //\\n  //*********************************************************************//\\n\\n  /** \\n    @notice \\n    The Projects contract which mints ERC-721's that represent project ownership and transfers.\\n  */\\n  IJBProjects public immutable override projects;\\n\\n  //*********************************************************************//\\n  // --------------------- public stored properties -------------------- //\\n  //*********************************************************************//\\n\\n  /** \\n    @notice \\n    For each project ID, the controller that manages how terminals interact with tokens and funding cycles.\\n\\n    _projectId The ID of the project to get the controller of.\\n  */\\n  mapping(uint256 => IJBController) public override controllerOf;\\n\\n  //*********************************************************************//\\n  // ------------------------- external views -------------------------- //\\n  //*********************************************************************//\\n\\n  /** \\n    @notice\\n    For each project ID, the terminals that are currently managing its funds.\\n\\n    @param _projectId The ID of the project to get terminals of.\\n\\n    @return An array of terminal addresses.\\n  */\\n  function terminalsOf(uint256 _projectId) external view override returns (IJBTerminal[] memory) {\\n    return _terminalsOf[_projectId];\\n  }\\n\\n  /** \\n    @notice\\n    Whether or not a specified terminal is a terminal of the specified project.\\n\\n    @param _projectId The ID of the project to check within.\\n    @param _terminal The address of the terminal to check for.\\n\\n    @return A flag indicating whether or not the specified terminal is a terminal of the specified project.\\n  */\\n  function isTerminalOf(uint256 _projectId, IJBTerminal _terminal)\\n    public\\n    view\\n    override\\n    returns (bool)\\n  {\\n    for (uint256 _i; _i < _terminalsOf[_projectId].length; _i++)\\n      if (_terminalsOf[_projectId][_i] == _terminal) return true;\\n    return false;\\n  }\\n\\n  /** \\n    @notice\\n    Whether or not a specified terminal is a terminal of the specified project.\\n\\n    @param _projectId The ID of the project to check within.\\n    @param _contract The address of the terminal to check for.\\n\\n    @return A flag indicating whether or not the specified terminal is a terminal of the specified project.\\n  */\\n  function isTerminalDelegateOf(uint256 _projectId, address _contract)\\n    public\\n    view\\n    override\\n    returns (bool)\\n  {\\n    for (uint256 _i; _i < _terminalsOf[_projectId].length; _i++)\\n      if (address(_terminalsOf[_projectId][_i].delegate()) == _contract) return true;\\n    return false;\\n  }\\n\\n  /** \\n    @notice\\n    The primary terminal that is managing funds for a project for a specified token.\\n\\n    @dev\\n    The zero address is returned if a terminal isn't found for the specified token.\\n\\n    @param _projectId The ID of the project to get a terminal for.\\n    @param _token The token the terminal accepts.\\n\\n    @return The primary terminal for the project for the specified token.\\n  */\\n  function primaryTerminalOf(uint256 _projectId, address _token)\\n    public\\n    view\\n    override\\n    returns (IJBTerminal)\\n  {\\n    // If a primary terminal for the token was specifically set, return it.\\n    if (_primaryTerminalOf[_projectId][_token] != IJBTerminal(address(0)))\\n      return _primaryTerminalOf[_projectId][_token];\\n\\n    // Return the first terminal which accepts the specified token.\\n    for (uint256 _i; _i < _terminalsOf[_projectId].length; _i++) {\\n      IJBTerminal _terminal = _terminalsOf[_projectId][_i];\\n      if (_terminal.token() == _token) return _terminal;\\n    }\\n\\n    // Not found.\\n    return IJBTerminal(address(0));\\n  }\\n\\n  /**\\n    @notice\\n    Whether or not a specified address is allowed to set controllers.\\n\\n    @param _address the address to check\\n\\n    @return A flag indicating whether or not the specified address can change controllers.\\n  */\\n  function isAllowedToSetController(address _address) public view override returns (bool) {\\n    return _setControllerAllowlist[_address];\\n  }\\n\\n  //*********************************************************************//\\n  // -------------------------- constructor ---------------------------- //\\n  //*********************************************************************//\\n\\n  /** \\n    @param _operatorStore A contract storing operator assignments.\\n    @param _projects A contract which mints ERC-721's that represent project ownership and transfers.\\n  */\\n  constructor(IJBOperatorStore _operatorStore, IJBProjects _projects) JBOperatable(_operatorStore) {\\n    projects = _projects;\\n  }\\n\\n  /**\\n    @notice\\n    Update the controller that manages how terminals interact with the ecosystem.\\n    @dev \\n    A controller can be set if:\\n    - the message sender is the project owner or an operator having the correct authorization.\\n    - or, an allowedlisted address is setting an allowlisted controller.\\n    @param _projectId The ID of the project to set a new controller for.\\n    @param _controller The new controller to set.\\n  */\\n  function setControllerOf(uint256 _projectId, IJBController _controller)\\n    external\\n    override\\n    requirePermissionAllowingOverride(\\n      projects.ownerOf(_projectId),\\n      _projectId,\\n      JBOperations.SET_CONTROLLER,\\n      (_setControllerAllowlist[address(_controller)] && _setControllerAllowlist[msg.sender])\\n    )\\n  {\\n    // Can't set the zero address.\\n    if (_controller == IJBController(address(0))) {\\n      revert SET_CONTROLLER_ZERO_ADDRESS();\\n    }\\n\\n    // If the controller is already set, nothing to do.\\n    if (controllerOf[_projectId] == _controller) return;\\n\\n    // The project must exist.\\n    if (projects.count() < _projectId) {\\n      revert INVALID_PROJECT_ID();\\n    }\\n\\n    // Set the new controller.\\n    controllerOf[_projectId] = _controller;\\n\\n    emit SetController(_projectId, _controller, msg.sender);\\n  }\\n\\n  /** \\n    @notice \\n    Add terminals to project's list of terminals.\\n\\n    @dev\\n    Only a project owner, an operator, or its controller can add terminals.\\n\\n    @param _projectId The ID of the project having a terminal added.\\n    @param _terminals The terminals to add.\\n  */\\n  function addTerminalsOf(uint256 _projectId, IJBTerminal[] calldata _terminals)\\n    external\\n    override\\n    requirePermissionAllowingOverride(\\n      projects.ownerOf(_projectId),\\n      _projectId,\\n      JBOperations.ADD_TERMINALS,\\n      msg.sender == address(controllerOf[_projectId])\\n    )\\n  {\\n    for (uint256 _i = 0; _i < _terminals.length; _i++) {\\n      _addTerminalIfNeeded(_projectId, _terminals[_i], msg.sender);\\n    }\\n  }\\n\\n  /** \\n    @notice \\n    Remove a terminal from a project's list of terminals.\\n\\n    @dev\\n    Only a project owner or an operator can remove one of its terminals. \\n\\n    @param _projectId The ID of the project having a terminal removed.\\n    @param _terminal The terminal to remove.\\n  */\\n  function removeTerminalOf(uint256 _projectId, IJBTerminal _terminal)\\n    external\\n    override\\n    requirePermission(projects.ownerOf(_projectId), _projectId, JBOperations.REMOVE_TERMINAL)\\n  {\\n    // Get a reference to the terminals of the project.\\n    IJBTerminal[] memory _terminals = _terminalsOf[_projectId];\\n\\n    // Delete the stored terminals for the project.\\n    delete _terminalsOf[_projectId];\\n\\n    // Repopulate the stored terminals for the project, omitting the one being deleted.\\n    for (uint256 _i; _i < _terminals.length; _i++)\\n      // Don't include the terminal being deleted.\\n      if (_terminals[_i] != _terminal) _terminalsOf[_projectId].push(_terminals[_i]);\\n\\n    // If the terminal that is being removed is the primary terminal for the token, delete it from being primary terminal.\\n    if (_primaryTerminalOf[_projectId][_terminal.token()] == _terminal)\\n      delete _primaryTerminalOf[_projectId][_terminal.token()];\\n\\n    emit RemoveTerminal(_projectId, _terminal, msg.sender);\\n  }\\n\\n  /** \\n    @notice\\n    Project's can set which terminal should be their primary for a particular token.\\n    This is useful in case a project has several terminals connected for a particular token.\\n\\n    @dev\\n    The terminal will be set as the primary for the token that its vault accepts. \\n\\n    @param _projectId The ID of the project for which a primary token is being set.\\n    @param _terminal The terminal to make primary.\\n  */\\n  function setPrimaryTerminalOf(uint256 _projectId, IJBTerminal _terminal)\\n    external\\n    override\\n    requirePermission(projects.ownerOf(_projectId), _projectId, JBOperations.SET_PRIMARY_TERMINAL)\\n  {\\n    // Can't set the zero address.\\n    if (_terminal == IJBTerminal(address(0))) {\\n      revert SET_PRIMARY_TERMINAL_ZERO_ADDRESS();\\n    }\\n\\n    // Get a reference to the token that the terminal's vault accepts.\\n    address _token = _terminal.token();\\n\\n    // Can't set this terminal as the primary if it already is.\\n    if (_terminal == _primaryTerminalOf[_projectId][_token]) {\\n      revert PRIMARY_TERMINAL_ALREADY_SET();\\n    }\\n\\n    // Add the terminal to thge project if it hasn't been already.\\n    _addTerminalIfNeeded(_projectId, _terminal, msg.sender);\\n\\n    // Store the terminal as the primary for the particular token.\\n    _primaryTerminalOf[_projectId][_token] = _terminal;\\n\\n    emit SetPrimaryTerminal(_projectId, _token, _terminal, msg.sender);\\n  }\\n\\n  /** \\n    @notice\\n    The owner (Juicebox multisig) can add addresses which are allowed to change\\n    a project's controller. Those addresses are known and vetted controllers as well as\\n    contracts designed to launch new projects. This is not a requirement for all controllers.\\n    However, unknown controllers may require additional transactions to perform certain operations.\\n\\n    @dev\\n    If you would like an address/contract allowlisted, please reach out to the Juicebox dev team.\\n\\n    @param _address the allowed address to be added.\\n  */\\n  function addToSetControllerAllowlist(address _address) external override onlyOwner {\\n    // Check that the address is not already in the allowlist.\\n    if (_setControllerAllowlist[_address]) {\\n      revert CONTROLLER_ALREADY_IN_ALLOWLIST();\\n    }\\n\\n    // Add the address to the allowlist.\\n    _setControllerAllowlist[_address] = true;\\n\\n    emit AddToSetControllerAllowlist(_address, msg.sender);\\n  }\\n\\n  /** \\n    @notice\\n    See `addKnownController(...)` for context. Removes an address from the allowlist.\\n\\n    @param _address The address to be removed.\\n  */\\n  function removeFromSetControllerAllowlist(address _address) external override onlyOwner {\\n    // Check that the address is in the allowlist.\\n    if (!_setControllerAllowlist[_address]) {\\n      revert CONTROLLER_NOT_IN_ALLOWLIST();\\n    }\\n\\n    // Remove the address from the allowlist.\\n    delete _setControllerAllowlist[_address];\\n\\n    emit RemoveFromSetControllerAllowlist(_address, msg.sender);\\n  }\\n\\n  //*********************************************************************//\\n  // --------------------- private helper functions -------------------- //\\n  //*********************************************************************//\\n\\n  /** \\n    @notice \\n    Add a terminal to a project's list of terminals if it hasn't been already.\\n\\n    @dev\\n    If the terminal is equal to address zero, the transaction will be reverted.\\n\\n    @param _projectId The ID of the project having a terminal added.\\n    @param _terminal The terminal to add.\\n    @param _caller The original caller that added the terminal.\\n  */\\n  function _addTerminalIfNeeded(\\n    uint256 _projectId,\\n    IJBTerminal _terminal,\\n    address _caller\\n  ) private {\\n    if (_terminal == IJBTerminal(address(0))) {\\n      revert ADD_TERMINAL_ZERO_ADDRESS();\\n    }\\n\\n    // Check that the terminal has not already been added.\\n    if (isTerminalOf(_projectId, _terminal)) return;\\n\\n    // Set the new terminal.\\n    _terminalsOf[_projectId].push(_terminal);\\n\\n    emit AddTerminal(_projectId, _terminal, _caller);\\n  }\\n}\\n\",\"keccak256\":\"0x325d98c545b83bf19ced0d3b71b647a9e15ddd6fa3a09a50e77241613240df98\",\"license\":\"MIT\"},\"contracts/abstract/JBOperatable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './../interfaces/IJBOperatable.sol';\\n\\n// --------------------------- custom errors -------------------------- //\\n//*********************************************************************//\\nerror UNAUTHORIZED();\\n\\n/** \\n  @notice\\n  Modifiers to allow access to functions based on the message sender's operator status.\\n*/\\nabstract contract JBOperatable is IJBOperatable {\\n  modifier requirePermission(\\n    address _account,\\n    uint256 _domain,\\n    uint256 _permissionIndex\\n  ) {\\n    if (\\n      msg.sender != _account &&\\n      !operatorStore.hasPermission(msg.sender, _account, _domain, _permissionIndex) &&\\n      !operatorStore.hasPermission(msg.sender, _account, 0, _permissionIndex)\\n    ) {\\n      revert UNAUTHORIZED();\\n    }\\n    _;\\n  }\\n\\n  modifier requirePermissionAllowingOverride(\\n    address _account,\\n    uint256 _domain,\\n    uint256 _permissionIndex,\\n    bool _override\\n  ) {\\n    if (\\n      !_override &&\\n      msg.sender != _account &&\\n      !operatorStore.hasPermission(msg.sender, _account, _domain, _permissionIndex) &&\\n      !operatorStore.hasPermission(msg.sender, _account, 0, _permissionIndex)\\n    ) {\\n      revert UNAUTHORIZED();\\n    }\\n    _;\\n  }\\n\\n  /** \\n    @notice \\n    A contract storing operator assignments.\\n  */\\n  IJBOperatorStore public immutable override operatorStore;\\n\\n  /** \\n    @param _operatorStore A contract storing operator assignments.\\n  */\\n  constructor(IJBOperatorStore _operatorStore) {\\n    operatorStore = _operatorStore;\\n  }\\n}\\n\",\"keccak256\":\"0x54dabe4efc06083ac139b6fb0f2c48157611f2186dd5959867aa2161a413407a\",\"license\":\"MIT\"},\"contracts/enums/JBBallotState.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nenum JBBallotState {\\n  Approved,\\n  Active,\\n  Failed\\n}\\n\",\"keccak256\":\"0xda8544e199de385d447fc485037d66ba906a88985328a5e1e0ddcb178b44f382\",\"license\":\"MIT\"},\"contracts/interfaces/IJBController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './IJBDirectory.sol';\\nimport './IJBTerminal.sol';\\nimport './IJBFundingCycleStore.sol';\\n\\ninterface IJBController {\\n  function reservedTokenBalanceOf(uint256 _projectId, uint256 _reservedRate)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function prepForMigrationOf(uint256 _projectId, IJBController _from) external;\\n\\n  function mintTokensOf(\\n    uint256 _projectId,\\n    uint256 _tokenCount,\\n    address _beneficiary,\\n    string calldata _memo,\\n    bool _preferClaimedTokens,\\n    uint256 _reserveRate\\n  ) external returns (uint256 beneficiaryTokenCount);\\n\\n  function burnTokensOf(\\n    address _holder,\\n    uint256 _projectId,\\n    uint256 _tokenCount,\\n    string calldata _memo,\\n    bool _preferClaimedTokens\\n  ) external;\\n\\n  function overflowAllowanceOf(\\n    uint256 _projectId,\\n    uint256 _configuration,\\n    IJBTerminal _terminal\\n  ) external view returns (uint256);\\n\\n  function distributionLimitOf(\\n    uint256 _projectId,\\n    uint256 _configuration,\\n    IJBTerminal _terminal\\n  ) external view returns (uint256);\\n\\n  function currencyOf(\\n    uint256 _projectId,\\n    uint256 _configuration,\\n    IJBTerminal _terminal\\n  ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3e4385f3bc7b2c078211344a393f6f4c3256ee755d334c03e93d0483621bcfe3\",\"license\":\"MIT\"},\"contracts/interfaces/IJBDirectory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './IJBTerminal.sol';\\nimport './IJBProjects.sol';\\nimport './IJBController.sol';\\n\\ninterface IJBDirectory {\\n  event SetController(uint256 indexed projectId, IJBController indexed controller, address caller);\\n\\n  event AddTerminal(uint256 indexed projectId, IJBTerminal indexed terminal, address caller);\\n\\n  event RemoveTerminal(uint256 indexed projectId, IJBTerminal indexed terminal, address caller);\\n\\n  event SetPrimaryTerminal(\\n    uint256 indexed projectId,\\n    address indexed token,\\n    IJBTerminal indexed terminal,\\n    address caller\\n  );\\n\\n  event AddToSetControllerAllowlist(address indexed _address, address caller);\\n\\n  event RemoveFromSetControllerAllowlist(address indexed _address, address caller);\\n\\n  function projects() external view returns (IJBProjects);\\n\\n  function controllerOf(uint256 _projectId) external view returns (IJBController);\\n\\n  function isAllowedToSetController(address _address) external view returns (bool);\\n\\n  function primaryTerminalOf(uint256 _projectId, address _token)\\n    external\\n    view\\n    returns (IJBTerminal);\\n\\n  function terminalsOf(uint256 _projectId) external view returns (IJBTerminal[] memory);\\n\\n  function isTerminalOf(uint256 _projectId, IJBTerminal _terminal) external view returns (bool);\\n\\n  function isTerminalDelegateOf(uint256 _projectId, address _delegate) external view returns (bool);\\n\\n  function addTerminalsOf(uint256 _projectId, IJBTerminal[] calldata _terminals) external;\\n\\n  function removeTerminalOf(uint256 _projectId, IJBTerminal _terminal) external;\\n\\n  function setControllerOf(uint256 _projectId, IJBController _controller) external;\\n\\n  function setPrimaryTerminalOf(uint256 _projectId, IJBTerminal _terminal) external;\\n\\n  function addToSetControllerAllowlist(address _address) external;\\n\\n  function removeFromSetControllerAllowlist(address _address) external;\\n}\\n\",\"keccak256\":\"0xcb8d82ed4c1b3a7800e0075d304a389e6810e2ba5df39e65870d7b65f9d900e5\",\"license\":\"MIT\"},\"contracts/interfaces/IJBFundingCycleBallot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './../enums/JBBallotState.sol';\\n\\ninterface IJBFundingCycleBallot {\\n  function duration() external view returns (uint256);\\n\\n  function stateOf(uint256 _configured) external view returns (JBBallotState);\\n}\\n\",\"keccak256\":\"0x7649782cc0f754b369bace5ac88e863027fa35d5912eef32ab0e8aef123adccb\",\"license\":\"MIT\"},\"contracts/interfaces/IJBFundingCycleStore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './IJBFundingCycleBallot.sol';\\nimport './../structs/JBFundingCycle.sol';\\nimport './../structs/JBFundingCycleData.sol';\\n\\ninterface IJBFundingCycleStore {\\n  event Configure(\\n    uint256 indexed configuration,\\n    uint256 indexed projectId,\\n    JBFundingCycleData data,\\n    uint256 metadata,\\n    uint256 mustStartAtOrAfter,\\n    address caller\\n  );\\n\\n  event Init(uint256 indexed configuration, uint256 indexed projectId, uint256 indexed basedOn);\\n\\n  function latestConfigurationOf(uint256 _projectId) external view returns (uint256);\\n\\n  function get(uint256 _projectId, uint256 _configuration)\\n    external\\n    view\\n    returns (JBFundingCycle memory);\\n\\n  function queuedOf(uint256 _projectId) external view returns (JBFundingCycle memory);\\n\\n  function currentOf(uint256 _projectId) external view returns (JBFundingCycle memory);\\n\\n  function currentBallotStateOf(uint256 _projectId) external view returns (JBBallotState);\\n\\n  function configureFor(\\n    uint256 _projectId,\\n    JBFundingCycleData calldata _data,\\n    uint256 _metadata,\\n    uint256 _mustStartAtOrAfter\\n  ) external returns (JBFundingCycle memory fundingCycle);\\n}\\n\",\"keccak256\":\"0xf8212a9e70b63c818f53aec3ed8728a2679d7b984d93b67a7d7e2890b6da8260\",\"license\":\"MIT\"},\"contracts/interfaces/IJBOperatable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './IJBOperatorStore.sol';\\n\\ninterface IJBOperatable {\\n  function operatorStore() external view returns (IJBOperatorStore);\\n}\\n\",\"keccak256\":\"0x150097e253a667d2336367445bea019bb3669ef7c82d358befe1f4cdd480e9aa\",\"license\":\"MIT\"},\"contracts/interfaces/IJBOperatorStore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './../structs/JBOperatorData.sol';\\n\\ninterface IJBOperatorStore {\\n  event SetOperator(\\n    address indexed operator,\\n    address indexed account,\\n    uint256 indexed domain,\\n    uint256[] permissionIndexes,\\n    uint256 packed\\n  );\\n\\n  function permissionsOf(\\n    address _operator,\\n    address _account,\\n    uint256 _domain\\n  ) external view returns (uint256);\\n\\n  function hasPermission(\\n    address _operator,\\n    address _account,\\n    uint256 _domain,\\n    uint256 _permissionIndex\\n  ) external view returns (bool);\\n\\n  function hasPermissions(\\n    address _operator,\\n    address _account,\\n    uint256 _domain,\\n    uint256[] calldata _permissionIndexes\\n  ) external view returns (bool);\\n\\n  function setOperator(JBOperatorData calldata _operatorData) external;\\n\\n  function setOperators(JBOperatorData[] calldata _operatorData) external;\\n}\\n\",\"keccak256\":\"0x50a26fddc575a50176df7deb9225ec1816b0158c9e9b8555e7921a3261254ed8\",\"license\":\"MIT\"},\"contracts/interfaces/IJBProjects.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\nimport './IJBTerminal.sol';\\n\\nimport './../structs/JBProjectMetadata.sol';\\n\\ninterface IJBProjects is IERC721 {\\n  event Create(\\n    uint256 indexed projectId,\\n    address indexed owner,\\n    bytes32 indexed handle,\\n    JBProjectMetadata metadata,\\n    address caller\\n  );\\n\\n  event SetHandle(uint256 indexed projectId, bytes32 indexed handle, address caller);\\n\\n  event SetMetadata(uint256 indexed projectId, JBProjectMetadata metadata, address caller);\\n\\n  event TransferHandle(\\n    uint256 indexed projectId,\\n    address indexed transferAddress,\\n    bytes32 indexed handle,\\n    bytes32 newHandle,\\n    address caller\\n  );\\n\\n  event ClaimHandle(\\n    uint256 indexed projectId,\\n    address indexed transferAddress,\\n    bytes32 indexed handle,\\n    address caller\\n  );\\n\\n  event ChallengeHandle(\\n    bytes32 indexed handle,\\n    uint256 indexed projectId,\\n    uint256 challengeExpiry,\\n    address caller\\n  );\\n\\n  event RenewHandle(bytes32 indexed handle, uint256 indexed projectId, address caller);\\n\\n  function count() external view returns (uint256);\\n\\n  function metadataCidOf(uint256 _projectId, uint256 _domain) external view returns (string memory);\\n\\n  function handleOf(uint256 _projectId) external returns (bytes32 handle);\\n\\n  function idFor(bytes32 _handle) external returns (uint256 projectId);\\n\\n  function transferAddressFor(bytes32 _handle) external returns (address receiver);\\n\\n  function challengeExpiryOf(bytes32 _handle) external returns (uint256);\\n\\n  function createFor(\\n    address _owner,\\n    bytes32 _handle,\\n    JBProjectMetadata calldata _metadata\\n  ) external returns (uint256 id);\\n\\n  function setHandleOf(uint256 _projectId, bytes32 _handle) external;\\n\\n  function setMetadataOf(uint256 _projectId, JBProjectMetadata calldata _metadata) external;\\n\\n  function transferHandleOf(\\n    uint256 _projectId,\\n    address _transferAddress,\\n    bytes32 _newHandle\\n  ) external returns (bytes32 _handle);\\n\\n  function claimHandle(\\n    bytes32 _handle,\\n    address _for,\\n    uint256 _projectId\\n  ) external;\\n\\n  function challengeHandle(bytes32 _handle) external;\\n\\n  function renewHandleOf(uint256 _projectId) external;\\n}\\n\",\"keccak256\":\"0x4ef5f5fc056b0dc95bf77b6443c2945bd4b96194d848cd4a6fd095b2edd1413a\",\"license\":\"MIT\"},\"contracts/interfaces/IJBTerminal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './IJBDirectory.sol';\\n\\ninterface IJBTerminal {\\n  function token() external view returns (address);\\n\\n  function ethBalanceOf(uint256 _projectId) external view returns (uint256);\\n\\n  function remainingDistributionLimitOf(\\n    uint256 _projectId,\\n    uint256 _fundingCycleConfiguration,\\n    uint256 _fundingCycleNumber\\n  ) external view returns (uint256);\\n\\n  function delegate() external view returns (address);\\n\\n  function pay(\\n    uint256 _projectId,\\n    address _beneficiary,\\n    uint256 _minReturnedTokens,\\n    bool _preferClaimedTokens,\\n    string calldata _memo,\\n    bytes calldata _delegateMetadata\\n  ) external payable;\\n\\n  function addToBalanceOf(uint256 _projectId, string memory _memo) external payable;\\n}\\n\",\"keccak256\":\"0xd8482a6347d06d13106c2f8252e1b6f9646a438af3c946b8075e4a2bb4fca32c\",\"license\":\"MIT\"},\"contracts/libraries/JBOperations.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nlibrary JBOperations {\\n  uint256 public constant RECONFIGURE = 1;\\n  uint256 public constant REDEEM = 2;\\n  uint256 public constant MIGRATE_CONTROLLER = 3;\\n  uint256 public constant MIGRATE_TERMINAL = 4;\\n  uint256 public constant PROCESS_FEES = 5;\\n  uint256 public constant SET_HANDLE = 6;\\n  uint256 public constant SET_METADATA = 7;\\n  uint256 public constant CLAIM_HANDLE = 8;\\n  uint256 public constant RENEW_HANDLE = 9;\\n  uint256 public constant ISSUE = 10;\\n  uint256 public constant CHANGE_TOKEN = 11;\\n  uint256 public constant MINT = 12;\\n  uint256 public constant BURN = 13;\\n  uint256 public constant TRANSFER = 14;\\n  uint256 public constant REQUIRE_CLAIM = 15;\\n  uint256 public constant SET_CONTROLLER = 16;\\n  uint256 public constant ADD_TERMINALS = 17;\\n  uint256 public constant REMOVE_TERMINAL = 18;\\n  uint256 public constant SET_PRIMARY_TERMINAL = 19;\\n  uint256 public constant USE_ALLOWANCE = 20;\\n  uint256 public constant SET_SPLITS = 21;\\n}\\n\",\"keccak256\":\"0xa9f83b1f1e24fce12cdf61c7921f6ab0a02e80a2da3b016dc27257c748f07aa9\",\"license\":\"MIT\"},\"contracts/structs/JBFundingCycle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './../interfaces/IJBFundingCycleBallot.sol';\\n\\nstruct JBFundingCycle {\\n  // The funding cycle number for each project.\\n  // Each funding cycle has a number that is an increment of the cycle that directly preceded it.\\n  // Each project's first funding cycle has a number of 1.\\n  uint256 number;\\n  // The timestamp when the parameters for this funding cycle were configured.\\n  // This value will stay the same for subsequent funding cycles that roll over from an originally configured cycle.\\n  uint256 configuration;\\n  // The `configuration` of the funding cycle with a `number` one less than this cycle's `number`.\\n  uint256 basedOn;\\n  // The timestamp marking the moment from which the funding cycle is considered active.\\n  // It is a unix timestamp measured in seconds.\\n  uint256 start;\\n  // The number of seconds the funding cycle lasts for, after which a new funding cycle will start.\\n  // A duration of 0 means that the funding cycle will stay active until the project owner explicitly issues a reconfiguration, at which point a new funding cycle will be triggered with the updated properties.\\n  // If the duration is greater than 0, a project owner cannot make changes to a funding cycle's parameters while it is active \\u2013 any proposed changes will apply to the subsequent cycle.\\n  // If no changes are proposed, a funding cycle rolls over to another one with the same properties but new `start` timestamp and a discounted `weight`.\\n  uint256 duration;\\n  // An unsigned 60.18-decimal fixed-point number that contracts can use to base arbitrary calculations on.\\n  // For example, the `JBETHPaymentTerminalStore` uses this to determine how many tokens it should mint when a payment is received.\\n  uint256 weight;\\n  // A number from 0-1000000000 indicating by how much the `weight` of the subsequent funding cycle should be reduced, if the project owner hasn't configured the subsequent funding cycle with an explicit `weight`.\\n  // If it's 0, each funding cycle will have equal weight.\\n  // If the number is 900000000, the next funding cycle will have a 10% smaller weight.\\n  uint256 discountRate;\\n  // An address of a contract that says whether a proposed reconfiguration should be accepted or rejected.\\n  // It can be used to create rules around how a project owner can change funding cycle parameters over time.\\n  IJBFundingCycleBallot ballot;\\n  // Extra data that can be associated with a funding cycle.\\n  uint256 metadata;\\n}\\n\",\"keccak256\":\"0x8ff64289216ea89220cc828df7d0ca1a363286c71a158faddd1b3161958b190e\",\"license\":\"MIT\"},\"contracts/structs/JBFundingCycleData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './../interfaces/IJBFundingCycleBallot.sol';\\n\\nstruct JBFundingCycleData {\\n  // The duration of the funding cycle in days.\\n  // A duration of 0 is no duration, meaning projects can trigger a new funding cycle on demand by issueing a reconfiguration.\\n  uint256 duration;\\n  // The weight of the funding cycle.\\n  // This number is interpreted as a wad, meaning it has 18 decimal places.\\n  // The protocol uses the weight to determine how many tokens to mint upon receiving a payment during a funding cycle.\\n  // A value of 0 means that the weight should be inherited and potentially discounted from the currently active cycle if possible. Otherwise a weight of 0 will be used.\\n  // A value of 1 means that no tokens should be minted regardless of how many ETH was paid. The protocol will set the stored weight value to 0.\\n  // A value of 1 X 10^18 means that one token should be minted per ETH received.\\n  uint256 weight;\\n  // If it's 0, each funding cycle will have equal weight.\\n  // If the number is 900000000, a contribution to the next funding cycle will only give you 10% of tickets given to a contribution of the same amoutn during the current funding cycle.\\n  uint256 discountRate;\\n  // An address of a contract that says whether a proposed reconfiguration should be accepted or rejected.\\n  IJBFundingCycleBallot ballot;\\n}\\n\",\"keccak256\":\"0xc68e73a33a605bab8bd4fa260833e7ba3b539f90e96f43b4851a33e53811eb2d\",\"license\":\"MIT\"},\"contracts/structs/JBOperatorData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nstruct JBOperatorData {\\n  // The address of the operator.\\n  address operator;\\n  // The domain within which the operator is being given permissions.\\n  uint256 domain;\\n  // The indexes of the permissions the operator is being given.\\n  uint256[] permissionIndexes;\\n}\\n\",\"keccak256\":\"0x25a5007c18c3c057615869124af6b0e9cdfbd64fd8d2d7a17f428d6eea5a4835\",\"license\":\"MIT\"},\"contracts/structs/JBProjectMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nstruct JBProjectMetadata {\\n  // An IPFS content ID where the metadata is found.\\n  string cid;\\n  // The domain within which the metadata applies.\\n  uint256 domain;\\n}\\n\",\"keccak256\":\"0x20aa514df26ed959b5a3a67ed4554733c354f3f8b662c33bece4c0fc2d486944\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200249d3803806200249d8339810160408190526200003491620000b8565b606082901b6001600160601b031916608052620000513362000068565b60601b6001600160601b03191660a0525062000110565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060408385031215620000cc57600080fd5b8251620000d981620000f7565b6020840151909250620000ec81620000f7565b809150509250929050565b6001600160a01b03811681146200010d57600080fd5b50565b60805160601c60a05160601c61230662000197600039600081816102240152818161034c01528181610a0a01528181610d79015281816112e401526117920152600081816102690152818161048a0152818161056601528181610b6601528181610c42015281816113f0015281816114cc0152818161189e015261197a01526123066000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c8063898370ee116100b2578063d175415311610081578063df14411811610066578063df144118146102e4578063e527757a146102f7578063f2fde38b1461030a57600080fd5b8063d17541531461028b578063d1880449146102ab57600080fd5b8063898370ee1461020c5780638b79543c1461021f5780638da5cb5b14610246578063ad007d631461026457600080fd5b80636e49181f116100ee5780636e49181f146101bb578063714e7f32146101de578063715018a6146101f157806386202650146101f957600080fd5b80631cda3bfe146101205780634a1f1df4146101355780635dd8f6aa146101485780636ca35c8a146101a8575b600080fd5b61013361012e366004612146565b61031d565b005b610133610143366004612081565b610671565b61017e6101563660046120e4565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101336101b6366004612081565b6107d9565b6101ce6101c9366004612116565b610938565b604051901515815260200161019f565b6101336101ec366004612116565b6109db565b610133610edc565b61017e610207366004612116565b610f69565b6101ce61021a366004612116565b61110a565b61017e7f000000000000000000000000000000000000000000000000000000000000000081565b60005473ffffffffffffffffffffffffffffffffffffffff1661017e565b61017e7f000000000000000000000000000000000000000000000000000000000000000081565b61029e6102993660046120e4565b61123c565b60405161019f91906121c5565b6101ce6102b9366004612081565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205460ff1690565b6101336102f2366004612116565b6112b5565b610133610305366004612116565b611763565b610133610318366004612081565b611dad565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b1580156103a357600080fd5b505afa1580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db91906120a5565b600084815260046020526040902054849060119073ffffffffffffffffffffffffffffffffffffffff16331480158161042a57503373ffffffffffffffffffffffffffffffffffffffff851614155b801561050657506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260448201859052606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b1580156104cc57600080fd5b505afa1580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050491906120c2565b155b80156105e257506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260006044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b1580156105a857600080fd5b505afa1580156105bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e091906120c2565b155b15610619576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b85811015610667576106558888888481811061063a5761063a61227f565b905060200201602081019061064f9190612081565b33611edd565b8061065f8161221f565b91505061061c565b5050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090205460ff16610756576040517f31b69c3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526003602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590513381527f627b6b323d459a0b1a57687e03a8e2899cee037277c9d3b13874b295be31c3db91015b60405180910390a250565b60005473ffffffffffffffffffffffffffffffffffffffff16331461085a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ee565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090205460ff16156108b9576040517ec1a9e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526003602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590513381527fdfd2bc577e70beb5e792777b0667811f285a3479332a67b6c6adbe7c33a337e591016107ce565b6000805b6000848152600160205260409020548110156109cf576000848152600160205260409020805473ffffffffffffffffffffffffffffffffffffffff851691908390811061098b5761098b61227f565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1614156109bd5760019150506109d5565b806109c78161221f565b91505061093c565b50600090505b92915050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b158015610a6157600080fd5b505afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9991906120a5565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040902054839060109060ff168015610ae257503360009081526003602052604090205460ff165b80158015610b0657503373ffffffffffffffffffffffffffffffffffffffff851614155b8015610be257506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260448201859052606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b158015610ba857600080fd5b505afa158015610bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be091906120c2565b155b8015610cbe57506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260006044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b158015610c8457600080fd5b505afa158015610c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbc91906120c2565b155b15610cf5576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8516610d42576040517f16908dd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008681526004602052604090205473ffffffffffffffffffffffffffffffffffffffff86811691161415610d7657610ed4565b857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166306661abd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ddd57600080fd5b505afa158015610df1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1591906120fd565b1015610e4d576040517f3b44d99200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008681526004602090815260409182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8916908117909155915133815288917f7f9a7dcb234c909a09de2f344661ad9e5b24067adb97c908647c2edcbb121c3091015b60405180910390a35b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ee565b610f676000611fda565b565b600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff858116855292528220541615610fd75750600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8086168552925290912054166109d5565b60005b6000848152600160205260409020548110156109cf5760008481526001602052604081208054839081106110105761101061227f565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561109a57600080fd5b505afa1580156110ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d291906120a5565b73ffffffffffffffffffffffffffffffffffffffff1614156110f75791506109d59050565b50806111028161221f565b915050610fda565b6000805b6000848152600160205260409020548110156109cf576000848152600160205260409020805473ffffffffffffffffffffffffffffffffffffffff851691908390811061115d5761115d61227f565b60009182526020918290200154604080517fc89e4361000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169263c89e436192600480840193829003018186803b1580156111cc57600080fd5b505afa1580156111e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120491906120a5565b73ffffffffffffffffffffffffffffffffffffffff16141561122a5760019150506109d5565b806112348161221f565b91505061110e565b6000818152600160209081526040918290208054835181840281018401909452808452606093928301828280156112a957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161127e575b50505050509050919050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b15801561133b57600080fd5b505afa15801561134f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137391906120a5565b8260133373ffffffffffffffffffffffffffffffffffffffff84161480159061146c57506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015260448201849052606482018390527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b15801561143257600080fd5b505afa158015611446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146a91906120c2565b155b801561154857506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015260006044830152606482018390527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b15801561150e57600080fd5b505afa158015611522573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154691906120c2565b155b1561157f576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166115cc576040517f0d8fcd8e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561161457600080fd5b505afa158015611628573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164c91906120a5565b600087815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8086168552925290912054919250868116911614156116bd576040517f9d9fc9f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116c8868633611edd565b600086815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8581168086529184529382902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948a1694851790559051338152909189917fc670a502bbb9f8a4315f95eca901a9f99b65f89a2eb5705a58050e5c00f9d672910160405180910390a4505050505050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b1580156117e957600080fd5b505afa1580156117fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182191906120a5565b8260123373ffffffffffffffffffffffffffffffffffffffff84161480159061191a57506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015260448201849052606482018390527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b1580156118e057600080fd5b505afa1580156118f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191891906120c2565b155b80156119f657506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015260006044830152606482018390527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b1580156119bc57600080fd5b505afa1580156119d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f491906120c2565b155b15611a2d576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085815260016020908152604080832080548251818502810185019093528083529192909190830182828015611a9a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611a6f575b5050506000898152600160205260408120939450611abb939250905061204f565b60005b8151811015611ba8578573ffffffffffffffffffffffffffffffffffffffff16828281518110611af057611af061227f565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614611b965760008781526001602052604090208251839083908110611b3557611b3561227f565b60209081029190910181015182546001810184556000938452919092200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790555b80611ba08161221f565b915050611abe565b508473ffffffffffffffffffffffffffffffffffffffff166002600088815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611c1b57600080fd5b505afa158015611c2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5391906120a5565b73ffffffffffffffffffffffffffffffffffffffff9081168252602082019290925260400160002054161415611d63576002600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611cde57600080fd5b505afa158015611cf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1691906120a5565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555b60405133815273ffffffffffffffffffffffffffffffffffffffff86169087907fbf79cd9af545aa6edcc5ac76aa264b34ccb6e59a51b44998a766f828ec9b7c8690602001610ecb565b60005473ffffffffffffffffffffffffffffffffffffffff163314611e2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ee565b73ffffffffffffffffffffffffffffffffffffffff8116611ed1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106ee565b611eda81611fda565b50565b73ffffffffffffffffffffffffffffffffffffffff8216611f2a576040517f0264fce300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f348383610938565b15611f3e57505050565b60008381526001602081815260408084208054938401815584529281902090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8681169182179092559251908416815285917f409bccc07b7cf7807930526a24318212d614c59f2dde05a017a41efee144e7c8910160405180910390a3505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5080546000825590600052602060002090810190611eda91905b8082111561207d5760008155600101612069565b5090565b60006020828403121561209357600080fd5b813561209e816122ae565b9392505050565b6000602082840312156120b757600080fd5b815161209e816122ae565b6000602082840312156120d457600080fd5b8151801515811461209e57600080fd5b6000602082840312156120f657600080fd5b5035919050565b60006020828403121561210f57600080fd5b5051919050565b6000806040838503121561212957600080fd5b82359150602083013561213b816122ae565b809150509250929050565b60008060006040848603121561215b57600080fd5b83359250602084013567ffffffffffffffff8082111561217a57600080fd5b818601915086601f83011261218e57600080fd5b81358181111561219d57600080fd5b8760208260051b85010111156121b257600080fd5b6020830194508093505050509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561221357835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016121e1565b50909695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612278577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114611eda57600080fdfea26469706673582212205bdd079952dcf764d6d78cc64bbd51321154361aec19d3b5cd8e03dfde86e92a64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061011b5760003560e01c8063898370ee116100b2578063d175415311610081578063df14411811610066578063df144118146102e4578063e527757a146102f7578063f2fde38b1461030a57600080fd5b8063d17541531461028b578063d1880449146102ab57600080fd5b8063898370ee1461020c5780638b79543c1461021f5780638da5cb5b14610246578063ad007d631461026457600080fd5b80636e49181f116100ee5780636e49181f146101bb578063714e7f32146101de578063715018a6146101f157806386202650146101f957600080fd5b80631cda3bfe146101205780634a1f1df4146101355780635dd8f6aa146101485780636ca35c8a146101a8575b600080fd5b61013361012e366004612146565b61031d565b005b610133610143366004612081565b610671565b61017e6101563660046120e4565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101336101b6366004612081565b6107d9565b6101ce6101c9366004612116565b610938565b604051901515815260200161019f565b6101336101ec366004612116565b6109db565b610133610edc565b61017e610207366004612116565b610f69565b6101ce61021a366004612116565b61110a565b61017e7f000000000000000000000000000000000000000000000000000000000000000081565b60005473ffffffffffffffffffffffffffffffffffffffff1661017e565b61017e7f000000000000000000000000000000000000000000000000000000000000000081565b61029e6102993660046120e4565b61123c565b60405161019f91906121c5565b6101ce6102b9366004612081565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205460ff1690565b6101336102f2366004612116565b6112b5565b610133610305366004612116565b611763565b610133610318366004612081565b611dad565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b1580156103a357600080fd5b505afa1580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db91906120a5565b600084815260046020526040902054849060119073ffffffffffffffffffffffffffffffffffffffff16331480158161042a57503373ffffffffffffffffffffffffffffffffffffffff851614155b801561050657506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260448201859052606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b1580156104cc57600080fd5b505afa1580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050491906120c2565b155b80156105e257506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260006044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b1580156105a857600080fd5b505afa1580156105bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e091906120c2565b155b15610619576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b85811015610667576106558888888481811061063a5761063a61227f565b905060200201602081019061064f9190612081565b33611edd565b8061065f8161221f565b91505061061c565b5050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090205460ff16610756576040517f31b69c3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526003602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590513381527f627b6b323d459a0b1a57687e03a8e2899cee037277c9d3b13874b295be31c3db91015b60405180910390a250565b60005473ffffffffffffffffffffffffffffffffffffffff16331461085a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ee565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090205460ff16156108b9576040517ec1a9e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526003602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590513381527fdfd2bc577e70beb5e792777b0667811f285a3479332a67b6c6adbe7c33a337e591016107ce565b6000805b6000848152600160205260409020548110156109cf576000848152600160205260409020805473ffffffffffffffffffffffffffffffffffffffff851691908390811061098b5761098b61227f565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1614156109bd5760019150506109d5565b806109c78161221f565b91505061093c565b50600090505b92915050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b158015610a6157600080fd5b505afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9991906120a5565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040902054839060109060ff168015610ae257503360009081526003602052604090205460ff165b80158015610b0657503373ffffffffffffffffffffffffffffffffffffffff851614155b8015610be257506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260448201859052606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b158015610ba857600080fd5b505afa158015610bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be091906120c2565b155b8015610cbe57506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260006044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b158015610c8457600080fd5b505afa158015610c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbc91906120c2565b155b15610cf5576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8516610d42576040517f16908dd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008681526004602052604090205473ffffffffffffffffffffffffffffffffffffffff86811691161415610d7657610ed4565b857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166306661abd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ddd57600080fd5b505afa158015610df1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1591906120fd565b1015610e4d576040517f3b44d99200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008681526004602090815260409182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8916908117909155915133815288917f7f9a7dcb234c909a09de2f344661ad9e5b24067adb97c908647c2edcbb121c3091015b60405180910390a35b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ee565b610f676000611fda565b565b600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff858116855292528220541615610fd75750600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8086168552925290912054166109d5565b60005b6000848152600160205260409020548110156109cf5760008481526001602052604081208054839081106110105761101061227f565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561109a57600080fd5b505afa1580156110ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d291906120a5565b73ffffffffffffffffffffffffffffffffffffffff1614156110f75791506109d59050565b50806111028161221f565b915050610fda565b6000805b6000848152600160205260409020548110156109cf576000848152600160205260409020805473ffffffffffffffffffffffffffffffffffffffff851691908390811061115d5761115d61227f565b60009182526020918290200154604080517fc89e4361000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169263c89e436192600480840193829003018186803b1580156111cc57600080fd5b505afa1580156111e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120491906120a5565b73ffffffffffffffffffffffffffffffffffffffff16141561122a5760019150506109d5565b806112348161221f565b91505061110e565b6000818152600160209081526040918290208054835181840281018401909452808452606093928301828280156112a957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161127e575b50505050509050919050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b15801561133b57600080fd5b505afa15801561134f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137391906120a5565b8260133373ffffffffffffffffffffffffffffffffffffffff84161480159061146c57506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015260448201849052606482018390527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b15801561143257600080fd5b505afa158015611446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146a91906120c2565b155b801561154857506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015260006044830152606482018390527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b15801561150e57600080fd5b505afa158015611522573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154691906120c2565b155b1561157f576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166115cc576040517f0d8fcd8e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561161457600080fd5b505afa158015611628573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164c91906120a5565b600087815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8086168552925290912054919250868116911614156116bd576040517f9d9fc9f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116c8868633611edd565b600086815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8581168086529184529382902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948a1694851790559051338152909189917fc670a502bbb9f8a4315f95eca901a9f99b65f89a2eb5705a58050e5c00f9d672910160405180910390a4505050505050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b1580156117e957600080fd5b505afa1580156117fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182191906120a5565b8260123373ffffffffffffffffffffffffffffffffffffffff84161480159061191a57506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015260448201849052606482018390527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b1580156118e057600080fd5b505afa1580156118f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191891906120c2565b155b80156119f657506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015260006044830152606482018390527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b1580156119bc57600080fd5b505afa1580156119d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f491906120c2565b155b15611a2d576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085815260016020908152604080832080548251818502810185019093528083529192909190830182828015611a9a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611a6f575b5050506000898152600160205260408120939450611abb939250905061204f565b60005b8151811015611ba8578573ffffffffffffffffffffffffffffffffffffffff16828281518110611af057611af061227f565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614611b965760008781526001602052604090208251839083908110611b3557611b3561227f565b60209081029190910181015182546001810184556000938452919092200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790555b80611ba08161221f565b915050611abe565b508473ffffffffffffffffffffffffffffffffffffffff166002600088815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611c1b57600080fd5b505afa158015611c2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5391906120a5565b73ffffffffffffffffffffffffffffffffffffffff9081168252602082019290925260400160002054161415611d63576002600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611cde57600080fd5b505afa158015611cf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1691906120a5565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555b60405133815273ffffffffffffffffffffffffffffffffffffffff86169087907fbf79cd9af545aa6edcc5ac76aa264b34ccb6e59a51b44998a766f828ec9b7c8690602001610ecb565b60005473ffffffffffffffffffffffffffffffffffffffff163314611e2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ee565b73ffffffffffffffffffffffffffffffffffffffff8116611ed1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106ee565b611eda81611fda565b50565b73ffffffffffffffffffffffffffffffffffffffff8216611f2a576040517f0264fce300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f348383610938565b15611f3e57505050565b60008381526001602081815260408084208054938401815584529281902090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8681169182179092559251908416815285917f409bccc07b7cf7807930526a24318212d614c59f2dde05a017a41efee144e7c8910160405180910390a3505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5080546000825590600052602060002090810190611eda91905b8082111561207d5760008155600101612069565b5090565b60006020828403121561209357600080fd5b813561209e816122ae565b9392505050565b6000602082840312156120b757600080fd5b815161209e816122ae565b6000602082840312156120d457600080fd5b8151801515811461209e57600080fd5b6000602082840312156120f657600080fd5b5035919050565b60006020828403121561210f57600080fd5b5051919050565b6000806040838503121561212957600080fd5b82359150602083013561213b816122ae565b809150509250929050565b60008060006040848603121561215b57600080fd5b83359250602084013567ffffffffffffffff8082111561217a57600080fd5b818601915086601f83011261218e57600080fd5b81358181111561219d57600080fd5b8760208260051b85010111156121b257600080fd5b6020830194508093505050509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561221357835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016121e1565b50909695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612278577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114611eda57600080fdfea26469706673582212205bdd079952dcf764d6d78cc64bbd51321154361aec19d3b5cd8e03dfde86e92a64736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addTerminalsOf(uint256,address[])": {
        "details": "Only a project owner, an operator, or its controller can add terminals.",
        "params": {
          "_projectId": "The ID of the project having a terminal added.",
          "_terminals": "The terminals to add."
        }
      },
      "addToSetControllerAllowlist(address)": {
        "details": "If you would like an address/contract allowlisted, please reach out to the Juicebox dev team.",
        "params": {
          "_address": "the allowed address to be added."
        }
      },
      "constructor": {
        "params": {
          "_operatorStore": "A contract storing operator assignments.",
          "_projects": "A contract which mints ERC-721's that represent project ownership and transfers."
        }
      },
      "isAllowedToSetController(address)": {
        "params": {
          "_address": "the address to check"
        },
        "returns": {
          "_0": "A flag indicating whether or not the specified address can change controllers."
        }
      },
      "isTerminalDelegateOf(uint256,address)": {
        "params": {
          "_contract": "The address of the terminal to check for.",
          "_projectId": "The ID of the project to check within."
        },
        "returns": {
          "_0": "A flag indicating whether or not the specified terminal is a terminal of the specified project."
        }
      },
      "isTerminalOf(uint256,address)": {
        "params": {
          "_projectId": "The ID of the project to check within.",
          "_terminal": "The address of the terminal to check for."
        },
        "returns": {
          "_0": "A flag indicating whether or not the specified terminal is a terminal of the specified project."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "primaryTerminalOf(uint256,address)": {
        "details": "The zero address is returned if a terminal isn't found for the specified token.",
        "params": {
          "_projectId": "The ID of the project to get a terminal for.",
          "_token": "The token the terminal accepts."
        },
        "returns": {
          "_0": "The primary terminal for the project for the specified token."
        }
      },
      "removeFromSetControllerAllowlist(address)": {
        "params": {
          "_address": "The address to be removed."
        }
      },
      "removeTerminalOf(uint256,address)": {
        "details": "Only a project owner or an operator can remove one of its terminals. ",
        "params": {
          "_projectId": "The ID of the project having a terminal removed.",
          "_terminal": "The terminal to remove."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setControllerOf(uint256,address)": {
        "details": " A controller can be set if: - the message sender is the project owner or an operator having the correct authorization. - or, an allowedlisted address is setting an allowlisted controller.",
        "params": {
          "_controller": "The new controller to set.",
          "_projectId": "The ID of the project to set a new controller for."
        }
      },
      "setPrimaryTerminalOf(uint256,address)": {
        "details": "The terminal will be set as the primary for the token that its vault accepts. ",
        "params": {
          "_projectId": "The ID of the project for which a primary token is being set.",
          "_terminal": "The terminal to make primary."
        }
      },
      "terminalsOf(uint256)": {
        "params": {
          "_projectId": "The ID of the project to get terminals of."
        },
        "returns": {
          "_0": "An array of terminal addresses."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addTerminalsOf(uint256,address[])": {
        "notice": " Add terminals to project's list of terminals."
      },
      "addToSetControllerAllowlist(address)": {
        "notice": "The owner (Juicebox multisig) can add addresses which are allowed to change a project's controller. Those addresses are known and vetted controllers as well as contracts designed to launch new projects. This is not a requirement for all controllers. However, unknown controllers may require additional transactions to perform certain operations."
      },
      "controllerOf(uint256)": {
        "notice": " For each project ID, the controller that manages how terminals interact with tokens and funding cycles. _projectId The ID of the project to get the controller of."
      },
      "isAllowedToSetController(address)": {
        "notice": "Whether or not a specified address is allowed to set controllers."
      },
      "isTerminalDelegateOf(uint256,address)": {
        "notice": "Whether or not a specified terminal is a terminal of the specified project."
      },
      "isTerminalOf(uint256,address)": {
        "notice": "Whether or not a specified terminal is a terminal of the specified project."
      },
      "operatorStore()": {
        "notice": " A contract storing operator assignments."
      },
      "primaryTerminalOf(uint256,address)": {
        "notice": "The primary terminal that is managing funds for a project for a specified token."
      },
      "projects()": {
        "notice": " The Projects contract which mints ERC-721's that represent project ownership and transfers."
      },
      "removeFromSetControllerAllowlist(address)": {
        "notice": "See `addKnownController(...)` for context. Removes an address from the allowlist."
      },
      "removeTerminalOf(uint256,address)": {
        "notice": " Remove a terminal from a project's list of terminals."
      },
      "setControllerOf(uint256,address)": {
        "notice": "Update the controller that manages how terminals interact with the ecosystem."
      },
      "setPrimaryTerminalOf(uint256,address)": {
        "notice": "Project's can set which terminal should be their primary for a particular token. This is useful in case a project has several terminals connected for a particular token."
      },
      "terminalsOf(uint256)": {
        "notice": "For each project ID, the terminals that are currently managing its funds."
      }
    },
    "notice": "Keeps a reference of which terminal contracts each project is currently accepting funds through, and which controller contract is managing each project's tokens and funding cycles.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/JBDirectory.sol:JBDirectory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5704,
        "contract": "contracts/JBDirectory.sol:JBDirectory",
        "label": "_terminalsOf",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_array(t_contract(IJBTerminal)14122)dyn_storage)"
      },
      {
        "astId": 5712,
        "contract": "contracts/JBDirectory.sol:JBDirectory",
        "label": "_primaryTerminalOf",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_contract(IJBTerminal)14122))"
      },
      {
        "astId": 5717,
        "contract": "contracts/JBDirectory.sol:JBDirectory",
        "label": "_setControllerAllowlist",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5729,
        "contract": "contracts/JBDirectory.sol:JBDirectory",
        "label": "controllerOf",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_contract(IJBController)13117)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_contract(IJBTerminal)14122)dyn_storage": {
        "base": "t_contract(IJBTerminal)14122",
        "encoding": "dynamic_array",
        "label": "contract IJBTerminal[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IJBController)13117": {
        "encoding": "inplace",
        "label": "contract IJBController",
        "numberOfBytes": "20"
      },
      "t_contract(IJBTerminal)14122": {
        "encoding": "inplace",
        "label": "contract IJBTerminal",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_contract(IJBTerminal)14122)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract IJBTerminal)",
        "numberOfBytes": "32",
        "value": "t_contract(IJBTerminal)14122"
      },
      "t_mapping(t_uint256,t_array(t_contract(IJBTerminal)14122)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => contract IJBTerminal[])",
        "numberOfBytes": "32",
        "value": "t_array(t_contract(IJBTerminal)14122)dyn_storage"
      },
      "t_mapping(t_uint256,t_contract(IJBController)13117)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => contract IJBController)",
        "numberOfBytes": "32",
        "value": "t_contract(IJBController)13117"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_contract(IJBTerminal)14122))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => contract IJBTerminal))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_contract(IJBTerminal)14122)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}